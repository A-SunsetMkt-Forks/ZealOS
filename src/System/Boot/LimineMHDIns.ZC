#include "/Boot/Limine-HDD.HH"

class CLimineStage2Header
{
	U16 size_a;
	U16 size_b;
	U64 location_a;
	U64 location_b;
};

U8					*limine			= binary_limine_hdd_bin_data;
U16					 limine_size	= sizeof(binary_limine_hdd_bin_data);
CLimineStage2Header *limine_stage2	= limine + 0x1A4;

U16 limine_stage2_size = limine_size - BLK_SIZE;
U16 limine_stage2_size_aligned = limine_stage2_size + ((BLK_SIZE * 2) - limine_stage2_size % (BLK_SIZE * 2));

limine_stage2->size_a = limine_stage2->size_b = limine_stage2_size_aligned / 2;
limine_stage2->location_a = BLK_SIZE;
limine_stage2->location_b = BLK_SIZE + limine_stage2->size_a;

CBlkDev *bd = Letter2BlkDev('c');
CMasterBoot old_mbr, *new_mbr = limine;

BlkDevLock(bd);

AHCIAtaBlksRead(bd, &old_mbr, 0, 1); // read old MBR currently on disk

MemCopy(new_mbr->p, old_mbr.p, sizeof(CMasterBoot.p)); // copy old MBR partition table to new Limine MBR

AHCIAtaBlksWrite(bd, limine, 0, 1 + (limine_stage2_size_aligned / BLK_SIZE)); // write Limine to MBR and post-MBR gap

BlkDevUnlock(bd);
